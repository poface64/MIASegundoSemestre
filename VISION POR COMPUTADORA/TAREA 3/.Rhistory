rm(list=ls())
#### Cargar las imágenes en escala de grises ####
library(png)
library(jpeg)
library(grid)
ruta = "IMG/IM4_gray.jpg"
# Cargar la imagen y proyectar
datos = readJPEG(ruta) # 1024 Filas; 768 columnas
grid.raster(datos) # Proyectar la imagen rapido
# Convertir una copia de la imagen en un super vector
img1 = c(datos*255)
# Contabilizar por intensidad los pixeles #
tabla = table(factor(img1,0:255) )
# Hacer el histograma
barplot(tabla)
#### Dividir entre n pixeles y gráficar la acumulada ####
n = sum(tabla)
pp = tabla
pi = pp/sum(pp)
acum = pi
#### Construir el acumulado
for(i in 1:length(pi)){
if(i > 1){
# Hacer la acumulación
acum[i] = acum[i] + acum[i-1]
}
}
#### Hacer la distribución acumulada ####
plot(as.numeric(acum),type = "l",
ylab = "Suma acumulada")
# Normalizar en base a la escala de 255 colores
cmin = min(acum)
TI = round(255 * ((acum[paste0(img1)]-cmin)/(1-cmin)))
table(TI)
#### Proyectar el resultado ####
R1 = matrix(TI,nrow = dim(datos)[1],ncol = dim(datos)[2])
grid.raster(R1/255)
barplot(table(TI))
grid.raster(datos) # Proyectar la imagen rapido
grid.raster(R1/255)
grid.raster(datos) # Proyectar la imagen rapido
grid.raster(R1/255)
grid.raster(datos) # Proyectar la imagen rapido
grid.raster(R1/255)
#ruta = "IMG/IM4_gray.jpg"
ruta = "IMG/Fig3.15(a)1.jpg"
# Cargar la imagen y proyectar
datos = readJPEG(ruta) # 1024 Filas; 768 columnas
grid.raster(datos) # Proyectar la imagen rapido
# Convertir una copia de la imagen en un super vector
img1 = c(datos*255)
# Contabilizar por intensidad los pixeles #
tabla = table(factor(img1,0:255) )
# Hacer el histograma
barplot(tabla)
#### Dividir entre n pixeles y gráficar la acumulada ####
n = sum(tabla)
pp = tabla
pi = pp/sum(pp)
acum = pi
#### Construir el acumulado
for(i in 1:length(pi)){
if(i > 1){
# Hacer la acumulación
acum[i] = acum[i] + acum[i-1]
}
}
#### Hacer la distribución acumulada ####
plot(as.numeric(acum),type = "l",
ylab = "Suma acumulada")
# Normalizar en base a la escala de 255 colores
cmin = min(acum)
TI = round(255 * ((acum[paste0(img1)]-cmin)/(1-cmin)))
table(TI)
#### Proyectar el resultado ####
R1 = matrix(TI,nrow = dim(datos)[1],ncol = dim(datos)[2])
grid.raster(R1/255)
barplot(table(TI))
